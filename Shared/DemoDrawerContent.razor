@*<h3>DemoDrawerContent</h3>

    @code {

    }*@


@using Microsoft.AspNetCore.Components
@inject NavigationManager Url
<style>
    .mdc-drawer {
        box-shadow: 2px 0px 2px 0px rgba(199, 199, 199, 0.29);
    }
</style>

<MatNavMenu Multi="true">
    <MatNavItem Href="@Url.ToAbsoluteUri("").AbsoluteUri" NavLinkMatch="NavLinkMatch.All"><MatIcon Icon="home"></MatIcon>&nbsp; Home</MatNavItem>

    @foreach (var groupModel in model)
    {
        <MatNavSubMenu Expanded="true">
            <MatNavSubMenuHeader>
                <MatNavItem AllowSelection="false">@groupModel.Group.Name</MatNavItem>
            </MatNavSubMenuHeader>
            <MatNavSubMenuList>
                @foreach (var navItem in groupModel.Items)
                {
                    <MatNavItem Href="@Url.ToAbsoluteUri(navItem.Url).AbsoluteUri">
                        @navItem.Name
                    </MatNavItem>
                }
            </MatNavSubMenuList>
        </MatNavSubMenu>
    }


</MatNavMenu>

@code
{

    class NavItem
    {
        public NavGroup Group;
        public string Name;
        public string Url;
        public int Order;
    }

    class NavGroup
    {
        public string Name;
        public int Order;

        public NavGroup(string name, int order = int.MaxValue)
        {
            Name = name;
            Order = order;
        }
    }

    class NavGroupModel
    {
        public NavGroup Group;
        public NavItem[] Items;
    }

    NavGroupModel[] model;

    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        var groups = new
        {
            Diwani = new NavGroup("Diwani", 1),
            //Navigation = new NavGroup("Navigation", 2),
            //Layout = new NavGroup("Layout", 3),
            //ButtonsAndIndicators = new NavGroup("Buttons & Indicators", 4),
            //PopupsAndModals = new NavGroup("Popups & Modals", 5),
            //DataTable = new NavGroup("Data Table", 6),
            //Other = new NavGroup("Other", 10),
        };
        var navItems = new[]
        {
            new NavItem()
            {
                Name = "Counter",
                Url = "Counter",
                Group = groups.Diwani,
                Order = 1
            },
    //            new NavItem()
    //            {
    //                Name = "Autocomplete",
    //                Url = "Autocomplete",
    //                Group = groups.FormControls,
    //            },
            new NavItem()
            {
                Name = "FetchData",
                Url = "fetchdata",
                Group = groups.Diwani,
            },
            new NavItem()
            {
                Name = "Checkbox",
                Url = "Checkbox",
                Group = groups.Diwani,
            },
        };


        model = navItems
            .GroupBy(i => i.Group)
            .OrderBy(i => i.Key.Order)
            .ThenBy(i => i.Key.Name)
            .Select(g =>
            {
                return new NavGroupModel()
                {
                    Group = g.Key,
                    Items = g
                        .OrderBy(i => i.Order)
                        .ThenBy(i => i.Name)
                        .ToArray(),
                };
            })
            .ToArray();
    }

}
