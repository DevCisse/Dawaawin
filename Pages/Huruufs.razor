@page "/Huruufs/{id}"
@inject HttpClient Http

    <h1 class="text-center m-3 " style="font-family:'Jim Nightshade', cursive;">Huruufs</h1>
    <h3 class="text-center m-3"   style="font-family:'Jim Nightshade', cursive;">Taysirul Wusul</h3>

    <input  class="form-control m-4" style="width:90%" placeholder="                            ابعث "  @bind-value="@SearchText" @bind-value:event="oninput" />


    @*<div class="form-group has-search">
        <span class="fa fa-search  form-control-feedback"></span>
        <input type="text" class="form-control" placeholder="Search">
    </div>*@
 
    <div>

        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12 mat-elevation-z5 index-row-item mdc-theme--surface">


            @*@if (Fusuuls != null)
                {

                    foreach (var item in Fusuuls)
                    {
                        <h2> @item.ArabicName  </h2>

                        foreach (var it in item.Huruufs.Where(x => x.FaslId == Convert.ToInt32(Id)))
                        {

                            <h5>
                                <a href="HarfList/@it.Id" class="btn "> @it.Name</a>


                                <Badge Class="site-badge-count-109" Count="@it.Abyaats.Count" Style="background-color: #52c41a" />
                            </h5>

                        }
                    }
                }*@

            @if (Fusuuls != null)
            {
                @foreach (var item in Fusuuls)
                {
                    <ul class="list-group">

                        @foreach (var it in item.Huruufs.Where(x => x.FaslId == Convert.ToInt32(Id) && x.Name.Contains(SearchText) ))
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <Badge Class="site-badge-count-109" Count="@it.Abyaats.Count" Style="background-color: #52c41a" />
                                <a href="HarfList/@it.Id" class="btn " style="font-family:'Jim Nightshade', cursive;"> <span > @it.Name</span> </a>

                            </li>
                        }

                    </ul>
                }

            }



        </div>
    </div>




    @code {
        [Parameter] public string Id { get; set; }

        private List<Fasl> Fusuuls = new List<Fasl>();
        private List<Harf> Harfs;

        public string SearchText { get; set; } = string.Empty;



        protected override async Task OnInitializedAsync()
        {
            Fusuuls = await Http.GetFromJsonAsync<List<Fasl>>("sample-data/1.json");

        }

    }
